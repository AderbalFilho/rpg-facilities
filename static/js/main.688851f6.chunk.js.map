{"version":3,"sources":["components/TheHeader/styles.js","components/TheHeader/TheHeader.js","components/TheHeader/index.js","components/TheFooter/styles.js","components/TheFooter/TheFooter.js","components/TheFooter/index.js","components/LasersFeelingsCard/styles.js","components/LasersFeelingsCard/LasersFeelingsCard.js","components/LasersFeelingsCard/index.js","constants/defaultLasersFeelingsSheet.js","constants/defaultLasersFeelingsFields.js","components/HandleLasersFeelingSheet/HandleLasersFeelingSheet.js","components/HandleLasersFeelingSheet/index.js","components/AddLaserFeelingSheet/styles.js","components/AddLaserFeelingSheet/AddLaserFeelingSheet.js","components/AddLaserFeelingSheet/index.js","components/DeleteConfirmation/DeleteConfirmation.js","components/DeleteConfirmation/index.js","helpers/local-storage.js","pages/LasersFeelingsSheet/styles.js","pages/LasersFeelingsSheet/LasersFeelingsSheet.js","pages/LasersFeelingsSheet/index.js","routes/index.js","App.js","reportWebVitals.js","index.js"],"names":["NavContainer","styled","div","TheHeader","navLinks","title","className","Group","align","Alignment","LEFT","Heading","RIGHT","map","navLink","icon","text","name","defaultProps","Footer","footer","TheFooter","TheDivider","Divider","CharacterName","H5","LasersFeelingsCard","handleOpen","sheet","characterName","playerName","style","concept","number","characterObjective","interactive","elevation","Elevation","TWO","onClick","DEFAULT_LASERS_FEELINGS_SHEET","id","uuid","DEFAULT_LASERS_FEELINGS_FIELDS","type","label","placeholder","min","max","HandleLasersFeelingSheet","addCharacter","close","editCharacter","isEditing","isOpen","removeCharacter","useState","character","setCharacter","beginEdit","setBeginEdit","handleClose","handleOnChange","value","modifiedCharacter","JSON","parse","stringify","autoFocus","enforceFocus","usePortal","canEscapeKeyClose","canOutsideClickClose","onClose","onSubmit","e","preventDefault","newCharacter","Classes","DIALOG_BODY","field","labelFor","defaultValue","onChange","target","onValueChange","allowNumericCharactersOnly","fill","growVertically","DIALOG_FOOTER","DIALOG_FOOTER_ACTIONS","intent","AddCharacterCard","Card","AddCharacterLabel","propTypes","PropTypes","func","isRequired","AddLaserFeelingSheet","setIsOpen","iconSize","DeleteConfirmation","children","handleCancel","handleDelete","canEscapeKeyCancel","canOutsideClickCancel","cancelButtonText","confirmButtonText","Intent","DANGER","onCancel","onConfirm","isLocalStorageAvailable","test","localStorage","setItem","removeItem","_e","ContainerBody","ButtonContainer","SheetsContainer","LasersFeelingsSheet","sheets","setSheets","isOpenClearConfirmation","setIsOpenClearConfirmation","isOpenDeleteConfirmation","setIsOpenDeleteConfirmation","deleteId","setDeleteId","toaster","setToaster","editingCharacter","setEditingCharacter","localStorageKey","findCharacterIndex","findIndex","localStorageSheets","getItem","useEffect","disabled","length","newSheets","push","characterIndex","show","SUCCESS","message","timeout","splice","ref","Routes","exact","path","component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.688851f6.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const NavContainer = styled.div`\n  margin: 0 auto;\n  max-width: 1200px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Alignment, Button, Navbar } from '@blueprintjs/core';\n\nimport * as S from './styles.js';\n\nfunction TheHeader({ navLinks, title }) {\n  return (\n    <Navbar className=\"bp3-dark\">\n      <S.NavContainer>\n        <Navbar.Group align={Alignment.LEFT}>\n          <Navbar.Heading>{title}</Navbar.Heading>\n        </Navbar.Group>\n        <Navbar.Group align={Alignment.RIGHT}>\n          {\n            navLinks.map(navLink => {\n              return (\n                <Button key={navLink.name} className=\"bp3-minimal\" icon={navLink.icon} text={navLink.name} />\n              )\n            })\n          }\n        </Navbar.Group>\n      </S.NavContainer>\n    </Navbar>\n  );\n}\n\nTheHeader.defaultProps = {\n  navLinks: [],\n  title: ''\n};\n\nTheHeader.propTypes = {\n  navLinks: PropTypes.array,\n  title: PropTypes.string,\n};\n\nexport default TheHeader;\n","import TheHeader from './TheHeader';\n\nexport default TheHeader;\n","import styled from 'styled-components';\n\nexport const Footer = styled.footer`\n  background-color: #394b59;\n  bottom: 0;\n  color: #fff;\n  left: 0;\n  padding: 12px;\n  position: fixed;\n  text-align: center;\n  width: 100%;\n`;\n","import React from 'react';\n\nimport * as S from './styles.js';\n\nfunction TheFooter() {\n  return (\n    <S.Footer>\n      <p>Todos os direitos reservados a seus respectivos donos</p>\n    </S.Footer>\n  );\n}\n\nexport default TheFooter;\n","import TheFooter from './TheFooter';\n\nexport default TheFooter;\n","import styled from 'styled-components';\nimport { Divider, H5 } from \"@blueprintjs/core\";\n\nexport const TheDivider = styled(Divider)`\n  margin: 10px 0;\n`;\n\nexport const CharacterName = styled(H5)`\n  text-align: center;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, Elevation } from \"@blueprintjs/core\";\n\nimport * as S from './styles.js';\n\nfunction LasersFeelingsCard({ handleOpen, sheet }) {\n  const {\n    characterName,\n    playerName,\n    style,\n    concept,\n    number,\n    characterObjective,\n  } = sheet;\n\n  return (\n    <Card interactive elevation={Elevation.TWO} onClick={() => handleOpen(sheet)}>\n      <S.CharacterName>{characterName || 'Nome do personagem'}</S.CharacterName>\n      <S.TheDivider />\n      <p><strong>Jogador:</strong> {playerName}</p>\n      <p><strong>Estilo:</strong> {style}</p>\n      <p><strong>Papel:</strong> {concept}</p>\n      <p><strong>Número:</strong> {number}</p>\n      <p><strong>Objetivo do personagem:</strong></p>\n      <p>{characterObjective}</p>\n    </Card>\n  );\n}\n\nLasersFeelingsCard.propTypes = {\n  handleOpen: PropTypes.func.isRequired,\n  sheet: PropTypes.object.isRequired,\n};\n\nexport default LasersFeelingsCard;\n","import LasersFeelingsCard from './LasersFeelingsCard';\n\nexport default LasersFeelingsCard;\n","import uuid from 'react-uuid';\n\nexport const DEFAULT_LASERS_FEELINGS_SHEET = {\n  id: uuid(),\n  characterName: '',\n  playerName: '',\n  style: '',\n  concept: '',\n  number: '',\n  characterObjective: ''\n};\n","export const DEFAULT_LASERS_FEELINGS_FIELDS = [\n  {\n    type: 'text',\n    label: 'Nome do personagem',\n    id: 'characterName',\n    placeholder: 'Ex.: Faísca da Silva',\n  },\n  {\n    type: 'text',\n    label: 'Nome do jogador',\n    id: 'playerName',\n    placeholder: 'Escreva seu nome ou o nome do jogador',\n  },\n  {\n    type: 'text',\n    label: 'Estilo',\n    id: 'style',\n    placeholder: 'Ex.: Alienígena',\n  },\n  {\n    type: 'text',\n    label: 'Papel',\n    id: 'concept',\n    placeholder: 'Ex.: Cientista',\n  },\n  {\n    type: 'number',\n    label: 'Número',\n    id: 'number',\n    placeholder: 'Escolha seu número de 2 a 5',\n    min: 2,\n    max: 5,\n  },\n  {\n    type: 'textarea',\n    label: 'Objetivo do personagem',\n    id: 'characterObjective',\n    placeholder: 'Ex.: Tornar-se capitão',\n  },\n];\n","import React, { useState } from \"react\";\nimport PropTypes from 'prop-types';\nimport uuid from 'react-uuid';\nimport {\n  Button,\n  Classes,\n  Dialog,\n  FormGroup,\n  InputGroup,\n  NumericInput,\n  TextArea,\n} from \"@blueprintjs/core\";\n\nimport { DEFAULT_LASERS_FEELINGS_FIELDS, DEFAULT_LASERS_FEELINGS_SHEET } from \"@constants\";\n\nfunction HandleLasersFeelingSheet({ addCharacter, close, editCharacter, isEditing, isOpen, removeCharacter, sheet }) {\n  const [character, setCharacter] = useState(DEFAULT_LASERS_FEELINGS_SHEET);\n  // It takes a while to sheet being updated, so this was necessary\n  const [beginEdit, setBeginEdit] = useState(false);\n\n  function handleClose() {\n    close();\n  }\n\n  function handleOnChange({ id, value }) {\n    const modifiedCharacter = JSON.parse(JSON.stringify(beginEdit || !isEditing ? character : sheet));\n    setBeginEdit(true);\n    modifiedCharacter[id] = value;\n    setCharacter(modifiedCharacter);\n  }\n\n  function handleDelete() {\n    removeCharacter(sheet.id);\n    handleClose();\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    if (isEditing) {\n      editCharacter(character);\n    } else {\n      addCharacter(character);\n    }\n\n    const newCharacter = JSON.parse(JSON.stringify(DEFAULT_LASERS_FEELINGS_SHEET));\n\n    newCharacter.id = uuid();\n    setCharacter(newCharacter);\n\n    setBeginEdit(false);\n    close();\n  }\n\n  return (\n    <>\n      <Dialog\n        isOpen={isOpen}\n        icon={isEditing ? 'edit' : 'add'}\n        title={`${isEditing ? 'Edite' : 'Crie'} seu personagem`}\n        autoFocus\n        enforceFocus\n        usePortal\n        canEscapeKeyClose={false}\n        canOutsideClickClose={false}\n        onClose={handleClose}\n      >\n        <form onSubmit={handleSubmit}>\n          <div className={Classes.DIALOG_BODY}>\n            {\n              DEFAULT_LASERS_FEELINGS_FIELDS.map(field => {\n                return (\n                  field.type === 'text' ?\n                    <FormGroup\n                      key={field.id}\n                      label={field.label}\n                      labelFor={field.id}\n                    >\n                      <InputGroup\n                        id={field.id}\n                        defaultValue={(sheet && sheet[field.id]) || ''}\n                        onChange={e=>handleOnChange(e.target)}\n                        placeholder={field.placeholder}\n                      />\n                    </FormGroup>\n                  : field.type === 'number' ?\n                    <FormGroup\n                      key={field.id}\n                      label={field.label}\n                      labelFor={field.id}\n                    >\n                      <NumericInput\n                        id={field.id}\n                        defaultValue={(sheet && sheet[field.id]) || ''}\n                        onValueChange={e=>handleOnChange({ id: field.id, value: e })}\n                        allowNumericCharactersOnly\n                        fill\n                        min={field.min}\n                        max={field.max}\n                        placeholder={field.placeholder}\n                      />\n                    </FormGroup>\n                  : field.type === 'textarea' ?\n                    <FormGroup\n                      key={field.id}\n                      label={field.label}\n                      labelFor={field.id}\n                    >\n                      <TextArea\n                        id={field.id}\n                        defaultValue={(sheet && sheet[field.id]) || ''}\n                        onChange={e=>handleOnChange(e.target)}\n                        growVertically\n                        fill\n                        placeholder={field.placeholder}\n                      />\n                    </FormGroup>\n                  : null\n                )\n              })\n            }\n          </div>\n          <div className={Classes.DIALOG_FOOTER}>\n            <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n              <Button onClick={handleClose}>Cancelar</Button>\n              {isEditing ? <Button type=\"button\" onClick={() => handleDelete()} intent=\"danger\">Remover</Button> : null}\n              <Button type=\"submit\" intent=\"success\">{isEditing ? 'Atualizar' : 'Adicionar'}</Button>\n            </div>\n          </div>\n        </form>\n      </Dialog>\n    </>\n  );\n}\n\nHandleLasersFeelingSheet.defaultProps = {\n  addCharacter: () => {},\n  editCharacter: () => {},\n  isEditing: false,\n  removeCharacter: () => {},\n  sheet: DEFAULT_LASERS_FEELINGS_SHEET,\n};\n\nHandleLasersFeelingSheet.propTypes = {\n  addCharacter: PropTypes.func,\n  close: PropTypes.func.isRequired,\n  editCharacter: PropTypes.func,\n  isOpen: PropTypes.bool.isRequired,\n  isEditing: PropTypes.bool,\n  removeCharacter: PropTypes.func,\n  sheet: PropTypes.object,\n};\n\nexport default HandleLasersFeelingSheet;\n","import HandleLasersFeelingSheet from './HandleLasersFeelingSheet';\n\nexport default HandleLasersFeelingSheet;\n","import styled from 'styled-components';\nimport { Card } from \"@blueprintjs/core\";\n\nexport const AddCharacterCard = styled(Card)`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  min-height: 220px;\n`;\n\nexport const AddCharacterLabel = styled.label`\n  font-size: 1.5em;\n  font-weight: bold;\n  margin-top: 24px;\n`;\n","import React, { useState } from \"react\";\nimport PropTypes from 'prop-types';\nimport {\n  Elevation,\n  Icon,\n} from \"@blueprintjs/core\";\n\nimport HandleLasersFeelingSheet from \"@components/HandleLasersFeelingSheet\";\n\nimport * as S from \"./styles.js\";\n\nfunction AddLaserFeelingSheet({ addCharacter }) {\n  const [isOpen, setIsOpen] = useState(false);\n\n  function handleOpen() {\n    setIsOpen(true);\n  }\n\n  function handleClose() {\n    setIsOpen(false);\n  }\n\n  return (\n    <>\n      <S.AddCharacterCard onClick={handleOpen} interactive elevation={Elevation.TWO}>\n        <Icon icon=\"add\" iconSize={48} />\n        <S.AddCharacterLabel>Adicionar Personagem</S.AddCharacterLabel>\n      </S.AddCharacterCard>\n      <HandleLasersFeelingSheet isOpen={isOpen} addCharacter={addCharacter} close={handleClose} />\n    </>\n  );\n}\n\nHandleLasersFeelingSheet.propTypes = {\n  addCharacter: PropTypes.func.isRequired,\n};\n\nexport default AddLaserFeelingSheet;\n","import AddLaserFeelingSheet from './AddLaserFeelingSheet';\n\nexport default AddLaserFeelingSheet;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Alert, Intent } from '@blueprintjs/core';\n\nconst DeleteConfirmation = ({ children, handleCancel, handleDelete, isOpen }) => {\n  return (\n    <Alert\n      canEscapeKeyCancel={true}\n      canOutsideClickCancel={true}\n      cancelButtonText=\"Cancelar\"\n      confirmButtonText=\"Excluir\"\n      icon=\"trash\"\n      intent={Intent.DANGER}\n      isOpen={isOpen}\n      onCancel={handleCancel}\n      onConfirm={handleDelete}\n    >\n      {children}\n    </Alert>\n  );\n}\n\nDeleteConfirmation.defaultProps = {\n  handleCancel: () => {},\n  handleDelete: () => {},\n  isOpen: false,\n};\n\nDeleteConfirmation.propTypes = {\n  children: PropTypes.node.isRequired,\n  handleCancel: PropTypes.func,\n  handleDelete: PropTypes.func,\n  isOpen: PropTypes.bool,\n};\n\nexport default DeleteConfirmation;\n","import DeleteConfirmation from './DeleteConfirmation';\n\nexport default DeleteConfirmation;\n","export const isLocalStorageAvailable = () => {\n  const test = 'test';\n\n  try {\n    localStorage.setItem(test, test);\n    localStorage.removeItem(test);\n    return true;\n  } catch (_e) {\n    return false;\n  }\n}\n","import styled from 'styled-components';\n\nexport const ContainerBody = styled.div`\n  margin: 24px auto;\n  max-width: 1200px;\n`;\n\nexport const ButtonContainer = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  margin-bottom: 24px;\n  margin-right: 16px;\n\n  @media (min-width: 1200px) {\n    margin-right: 0;\n  }\n`;\n\nexport const SheetsContainer = styled.div`\n  display: grid;\n  gap: 24px;\n  grid-template-columns: repeat(auto-fit, 310px);\n  justify-content: center;\n`;\n","import React, { useEffect, useState } from 'react';\nimport { Button, Intent, Toaster } from '@blueprintjs/core';\n\nimport LasersFeelingsCard from '@components/LasersFeelingsCard';\nimport AddLaserFeelingSheet from '@components/AddLaserFeelingSheet';\nimport HandleLasersFeelingSheet from '@components/HandleLasersFeelingSheet';\nimport DeleteConfirmation from '@components/DeleteConfirmation';\nimport { isLocalStorageAvailable } from '@helpers';\n\nimport * as S from './styles.js';\n\nfunction LasersFeelingsSheet() {\n  const [sheets, setSheets] = useState([]);\n  const [isOpenClearConfirmation, setIsOpenClearConfirmation] = useState(false);\n  const [isOpenDeleteConfirmation, setIsOpenDeleteConfirmation] = useState(false);\n  const [deleteId, setDeleteId] = useState('');\n  const [isOpen, setIsOpen] = useState(false);\n  const [toaster, setToaster] = useState(null);\n  const [editingCharacter, setEditingCharacter] = useState(null);\n  const localStorageKey = 'lasers-feelings-sheets';\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const useMountEffect = (func) => useEffect(func, []);\n\n  useMountEffect(() => {\n    if (isLocalStorageAvailable) {\n      const localStorageSheets = localStorage.getItem(localStorageKey);\n      if (localStorageSheets) {\n        setSheets(JSON.parse(localStorageSheets));\n      }\n    }\n  });\n\n  function addCharacter(character) {\n    const newSheets = JSON.parse(JSON.stringify(sheets));\n\n    newSheets.push(character);\n\n    if (isLocalStorageAvailable) {\n      localStorage.setItem(localStorageKey, JSON.stringify(newSheets));\n    }\n\n    setSheets(newSheets);\n  }\n\n  function findCharacterIndex(id) {\n    return sheets.findIndex((sheet => sheet.id === id));\n  }\n\n  function editCharacter(character) {\n    const characterIndex = findCharacterIndex(editingCharacter.id);\n    const newSheets = JSON.parse(JSON.stringify(sheets));\n\n    newSheets[characterIndex] = character;\n\n    if (isLocalStorageAvailable) {\n      localStorage.setItem(localStorageKey, JSON.stringify(newSheets));\n    }\n\n    setSheets(newSheets);\n  }\n\n  function onRemoveCharacter(id) {\n    setDeleteId(id);\n    setIsOpenDeleteConfirmation(true);\n  }\n\n  function removeCharacter() {\n    const characterIndex = findCharacterIndex(deleteId);\n    let newSheets = JSON.parse(JSON.stringify(sheets));\n\n    newSheets.splice(characterIndex, 1);\n\n    if (isLocalStorageAvailable) {\n      localStorage.setItem(localStorageKey, JSON.stringify(newSheets));\n    }\n\n    setSheets(newSheets);\n    toaster.show({ icon: 'tick', intent: Intent.SUCCESS, message: 'Ficha apagada', timeout: 2000 });\n    setIsOpenDeleteConfirmation(false);\n  }\n\n  function clearSheets() {\n    if (isLocalStorageAvailable) {\n      localStorage.removeItem(localStorageKey);\n    }\n\n    setSheets([]);\n    setIsOpenClearConfirmation(false);\n    toaster.show({ icon: 'tick', intent: Intent.SUCCESS, message: 'Fichas apagadas', timeout: 2000 });\n  }\n\n  function handleOpen(character) {\n    setEditingCharacter(character);\n    setIsOpen(true);\n  }\n\n  function handleClose() {\n    setIsOpen(false);\n  }\n\n  return (\n    <S.ContainerBody>\n      <S.ButtonContainer>\n        <Button intent=\"danger\" disabled={!sheets.length} onClick={() => setIsOpenClearConfirmation(true)}>Apagar tudo</Button>\n      </S.ButtonContainer>\n      <S.SheetsContainer>\n        {\n          sheets.map(sheet => {\n            return <LasersFeelingsCard key={sheet.id} handleOpen={handleOpen} sheet={sheet} />\n          })\n        }\n        <AddLaserFeelingSheet addCharacter={addCharacter} />\n        <HandleLasersFeelingSheet\n          isOpen={isOpen}\n          sheet={editingCharacter}\n          isEditing\n          editCharacter={editCharacter}\n          removeCharacter={onRemoveCharacter}\n          close={handleClose}\n        />\n      </S.SheetsContainer>\n      <DeleteConfirmation isOpen={isOpenClearConfirmation} handleCancel={() => setIsOpenClearConfirmation(false)} handleDelete={clearSheets}>\n        <p>Tem certeza que deseja apagar todas as fichas?</p>\n      </DeleteConfirmation>\n      <DeleteConfirmation isOpen={isOpenDeleteConfirmation} handleCancel={() => setIsOpenDeleteConfirmation(false)} handleDelete={removeCharacter}>\n        <p>Tem certeza que deseja apagar?</p>\n      </DeleteConfirmation>\n      <Toaster ref={ref => setToaster(ref)} />\n    </S.ContainerBody>\n  );\n}\n\nexport default LasersFeelingsSheet;\n","import LasersFeelingsSheet from './LasersFeelingsSheet';\n\nexport default LasersFeelingsSheet;\n","import React from 'react';\nimport { Switch, Route, BrowserRouter as Router } from 'react-router-dom';\n\nimport LasersFeelingsSheet from \"@pages/LasersFeelingsSheet\";\n\nconst Routes = () => (\n  <Router>\n    <Switch>\n      {/* <Route exact path=\"/rpg-facilities/\">\n        <Redirect to=\"/rpg-facilities/lasers-feelings\" />\n      </Route>\n      <Route path=\"/rpg-facilities/lasers-feelings\" component={LasersFeelingsSheet} /> */}\n      <Route exact path=\"/rpg-facilities/\" component={LasersFeelingsSheet} />\n    </Switch>\n  </Router>\n);\n\nexport default Routes;\n","import TheHeader from \"@components/TheHeader\";\nimport TheFooter from \"@components/TheFooter\";\nimport Routes from \"./routes\";\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <>\n      <TheHeader title=\"Criação de fichas de RPG de Lasers &amp; Sentimentos\"/>\n      <Routes />\n      <TheFooter />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}