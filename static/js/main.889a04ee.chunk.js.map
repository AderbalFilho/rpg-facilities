{"version":3,"sources":["components/TheHeader/styles.js","components/TheHeader/TheHeader.js","components/TheHeader/index.js","components/TheFooter/styles.js","components/TheFooter/TheFooter.js","components/TheFooter/index.js","components/LasersFeelingsCard/styles.js","components/LasersFeelingsCard/LasersFeelingsCard.js","components/LasersFeelingsCard/index.js","constants/defaultSheet.js","components/HandleLasersFeelingSheet/HandleLasersFeelingSheet.js","components/HandleLasersFeelingSheet/index.js","components/AddLaserFeelingSheet/styles.js","components/AddLaserFeelingSheet/AddLaserFeelingSheet.js","components/AddLaserFeelingSheet/index.js","pages/LasersFeelingsSheet/styles.js","pages/LasersFeelingsSheet/LasersFeelingsSheet.js","pages/LasersFeelingsSheet/index.js","routes/index.js","App.js","reportWebVitals.js","index.js"],"names":["NavContainer","styled","div","TheHeader","navLinks","title","className","Group","align","Alignment","LEFT","Heading","RIGHT","map","navLink","icon","text","name","defaultProps","link","Footer","footer","TheFooter","TheDivider","Divider","CharacterName","H5","LasersFeelingsCard","sheet","characterName","playerName","style","concept","number","characterObjective","interactive","elevation","Elevation","TWO","defaultLasersFeelingsSheet","HandleLasersFeelingSheet","addCharacter","close","isOpen","useState","character","setCharacter","handleClose","handleOnChange","id","value","modifiedCharacter","JSON","parse","stringify","autoFocus","enforceFocus","usePortal","canEscapeKeyClose","canOutsideClickClose","onClose","onSubmit","e","preventDefault","Classes","DIALOG_BODY","label","labelFor","onChange","target","placeholder","onValueChange","allowNumericCharactersOnly","fill","min","max","growVertically","DIALOG_FOOTER","DIALOG_FOOTER_ACTIONS","onClick","type","intent","AddCharacterCard","Card","AddCharacterLabel","propTypes","PropTypes","func","isRequired","AddLaserFeelingSheet","setIsOpen","iconSize","ContainerBody","LasersFeelingsSheet","sheets","setSheets","newSheets","push","Routes","exact","path","to","component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.889a04ee.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const NavContainer = styled.div`\n  margin: 0 auto;\n  max-width: 1200px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Alignment, Button, Navbar } from '@blueprintjs/core';\n\nimport * as S from './styles.js';\n\nfunction TheHeader({ navLinks, title }) {\n  return (\n    <Navbar className=\"bp3-dark\">\n      <S.NavContainer>\n        <Navbar.Group align={Alignment.LEFT}>\n          <Navbar.Heading>{title}</Navbar.Heading>\n        </Navbar.Group>\n        <Navbar.Group align={Alignment.RIGHT}>\n          {\n            navLinks.map(navLink => {\n              return (\n                <Button key={navLink.name} className=\"bp3-minimal\" icon={navLink.icon} text={navLink.name} />\n              )\n            })\n          }\n        </Navbar.Group>\n      </S.NavContainer>\n    </Navbar>\n  );\n}\n\nTheHeader.defaultProps = {\n  navLinks: [{ name: 'Home', icon: 'home', link: '/' }],\n  title: ''\n};\n\nTheHeader.propTypes = {\n  navLinks: PropTypes.array,\n  title: PropTypes.string,\n};\n\nexport default TheHeader;\n","import TheHeader from './TheHeader';\n\nexport default TheHeader;\n","import styled from 'styled-components';\n\nexport const Footer = styled.footer`\n  background-color: #394b59;\n  bottom: 0;\n  color: #fff;\n  left: 0;\n  padding: 12px;\n  position: fixed;\n  text-align: center;\n  width: 100%;\n`;\n","import React from 'react';\n\nimport * as S from './styles.js';\n\nfunction TheFooter() {\n  return (\n    <S.Footer>\n      <p>Todos os direitos reservados a seus respectivos donos</p>\n    </S.Footer>\n  );\n}\n\nexport default TheFooter;\n","import TheFooter from './TheFooter';\n\nexport default TheFooter;\n","import styled from 'styled-components';\nimport { Divider, H5 } from \"@blueprintjs/core\";\n\nexport const TheDivider = styled(Divider)`\n  margin: 10px 0;\n`;\n\nexport const CharacterName = styled(H5)`\n  text-align: center;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, Elevation } from \"@blueprintjs/core\";\n\nimport * as S from './styles.js';\n\nfunction LasersFeelingsCard({ sheet }) {\n  const {\n    characterName,\n    playerName,\n    style,\n    concept,\n    number,\n    characterObjective,\n  } = sheet;\n\n  return (\n    <Card interactive={true} elevation={Elevation.TWO}>\n      <S.CharacterName>{characterName || 'Nome do personagem'}</S.CharacterName>\n      <S.TheDivider />\n      <p><strong>Jogador:</strong> {playerName}</p>\n      <p><strong>Estilo:</strong> {style}</p>\n      <p><strong>Papel:</strong> {concept}</p>\n      <p><strong>NÃºmero:</strong> {number}</p>\n      <p><strong>Objetivo do personagem:</strong></p>\n      <p>{characterObjective}</p>\n    </Card>\n  );\n}\n\nLasersFeelingsCard.propTypes = {\n  sheet: PropTypes.object.isRequired,\n};\n\nexport default LasersFeelingsCard;\n","import LasersFeelingsCard from './LasersFeelingsCard';\n\nexport default LasersFeelingsCard;\n","const defaultLasersFeelingsSheet = {\n  characterName: '',\n  playerName: '',\n  style: '',\n  concept: '',\n  number: '',\n  characterObjective: ''\n};\n\nexport default defaultLasersFeelingsSheet;\n","import React, { useState } from \"react\";\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  Classes,\n  Dialog,\n  FormGroup,\n  InputGroup,\n  NumericInput,\n  TextArea,\n} from \"@blueprintjs/core\";\n\nimport defaultLasersFeelingsSheet from \"@constants/defaultSheet.js\";\n\n// import * as S from \"./styles.js\";\n\nfunction HandleLasersFeelingSheet({ addCharacter, close, isOpen, sheet }) {\n  const [character, setCharacter] = useState(sheet || defaultLasersFeelingsSheet);\n\n  function handleClose() {\n    close();\n  }\n\n  function handleOnChange({ id, value }) {\n    const modifiedCharacter = JSON.parse(JSON.stringify(character));\n    modifiedCharacter[id] = value;\n    setCharacter(modifiedCharacter);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    addCharacter(character);\n    close();\n  }\n\n  return (\n    <>\n      <Dialog\n        isOpen={isOpen}\n        icon=\"add\"\n        title=\"Crie seu personagem\"\n        autoFocus={true}\n        enforceFocus={true}\n        usePortal={true}\n        canEscapeKeyClose={false}\n        canOutsideClickClose={false}\n        onClose={handleClose}\n      >\n        <form onSubmit={handleSubmit}>\n          <div className={Classes.DIALOG_BODY}>\n            <FormGroup\n              label=\"Nome do personagem\"\n              labelFor=\"characterName\"\n            >\n              <InputGroup id=\"characterName\" onChange={e=>handleOnChange(e.target)} placeholder=\"Ex.: FaÃ­sca da Silva\" />\n            </FormGroup>\n            <FormGroup\n              label=\"Nome do jogador\"\n              labelFor=\"playerName\"\n            >\n              <InputGroup id=\"playerName\" onChange={e=>handleOnChange(e.target)} placeholder=\"Escreva seu nome ou o nome do jogador\" />\n            </FormGroup>\n            <FormGroup\n              label=\"Estilo\"\n              labelFor=\"style\"\n            >\n              <InputGroup id=\"style\" onChange={e=>handleOnChange(e.target)} placeholder=\"Ex.: AlienÃ­gena\" />\n            </FormGroup>\n            <FormGroup\n              label=\"Papel\"\n              labelFor=\"concept\"\n            >\n              <InputGroup id=\"concept\" onChange={e=>handleOnChange(e.target)} placeholder=\"Ex.: Cientista\" />\n            </FormGroup>\n            <FormGroup\n              label=\"NÃºmero\"\n              labelFor=\"number\"\n            >\n              <NumericInput\n                id=\"number\"\n                onValueChange={e=>handleOnChange({ id: 'number', value: e })}\n                allowNumericCharactersOnly={true}\n                fill={true}\n                min=\"2\"\n                max=\"5\"\n                placeholder=\"Escolha seu nÃºmero de 2 a 5\"\n              />\n            </FormGroup>\n            <FormGroup\n              label=\"Objetivo do personagem\"\n              labelFor=\"characterObjective\"\n            >\n              <TextArea\n                id=\"characterObjective\"\n                onChange={e=>handleOnChange(e.target)}\n                growVertically={true}\n                fill={true}\n                placeholder=\"Ex.: Tornar-se capitÃ£o\"\n              />\n            </FormGroup>\n          </div>\n          <div className={Classes.DIALOG_FOOTER}>\n            <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n              <Button onClick={handleClose}>Cancelar</Button>\n              <Button type=\"submit\" intent=\"success\">Adicionar</Button>\n            </div>\n          </div>\n        </form>\n      </Dialog>\n    </>\n  );\n}\n\nHandleLasersFeelingSheet.defaultProps = {\n  sheet: defaultLasersFeelingsSheet,\n};\n\nHandleLasersFeelingSheet.propTypes = {\n  addCharacter: PropTypes.func,\n  close: PropTypes.func.isRequired,\n  isOpen: PropTypes.bool.isRequired,\n  sheet: PropTypes.object,\n};\n\nexport default HandleLasersFeelingSheet;\n","import HandleLasersFeelingSheet from './HandleLasersFeelingSheet';\n\nexport default HandleLasersFeelingSheet;\n","import styled from 'styled-components';\nimport { Card } from \"@blueprintjs/core\";\n\nexport const AddCharacterCard = styled(Card)`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  min-height: 220px;\n`;\n\nexport const AddCharacterLabel = styled.label`\n  font-size: 1.5em;\n  font-weight: bold;\n  margin-top: 24px;\n`;\n","import React, { useState } from \"react\";\nimport PropTypes from 'prop-types';\nimport {\n  Elevation,\n  Icon,\n} from \"@blueprintjs/core\";\n\nimport HandleLasersFeelingSheet from \"@components/HandleLasersFeelingSheet\";\n\nimport * as S from \"./styles.js\";\n\nfunction AddLaserFeelingSheet({ addCharacter }) {\n  const [isOpen, setIsOpen] = useState(false);\n\n  function handleOpen() {\n    setIsOpen(true);\n  }\n\n  function handleClose() {\n    setIsOpen(false);\n  }\n\n  return (\n    <>\n      <S.AddCharacterCard onClick={handleOpen} interactive={true} elevation={Elevation.TWO}>\n        <Icon icon=\"add\" iconSize={48} />\n        <S.AddCharacterLabel>Adicionar Personagem</S.AddCharacterLabel>\n      </S.AddCharacterCard>\n      <HandleLasersFeelingSheet isOpen={isOpen} addCharacter={addCharacter} close={handleClose} />\n    </>\n  );\n}\n\nHandleLasersFeelingSheet.propTypes = {\n  addCharacter: PropTypes.func.isRequired,\n};\n\nexport default AddLaserFeelingSheet;\n","import AddLaserFeelingSheet from './AddLaserFeelingSheet';\n\nexport default AddLaserFeelingSheet;\n","import styled from 'styled-components';\n\nexport const ContainerBody = styled.div`\n  display: grid;\n  gap: 24px;\n  grid-template-columns: repeat(auto-fit, 310px);\n  justify-content: center;\n  margin: 24px auto;\n  max-width: 1200px;\n`;\n","import React, { useState } from 'react';\n\nimport LasersFeelingsCard from '@components/LasersFeelingsCard';\nimport AddLaserFeelingSheet from '@components/AddLaserFeelingSheet';\n\nimport * as S from './styles.js';\n\nfunction LasersFeelingsSheet() {\n  const [sheets, setSheets] = useState([]);\n\n  function addCharacter(character) {\n    const newSheets = JSON.parse(JSON.stringify(sheets));\n\n    newSheets.push(character);\n    setSheets(newSheets);\n  }\n\n  return (\n    <S.ContainerBody>\n      {\n        sheets.map(sheet => {\n          return <LasersFeelingsCard key={sheet.characterName} sheet={sheet} />\n        })\n      }\n      <AddLaserFeelingSheet addCharacter={addCharacter} />\n    </S.ContainerBody>\n  );\n}\n\nexport default LasersFeelingsSheet;\n","import LasersFeelingsSheet from './LasersFeelingsSheet';\n\nexport default LasersFeelingsSheet;\n","import React from 'react';\nimport { Switch, Route, BrowserRouter as Router, Redirect } from 'react-router-dom';\n\nimport LasersFeelingsSheet from \"@pages/LasersFeelingsSheet\";\n\nconst Routes = () => (\n  <Router>\n    <Switch>\n      <Route exact path=\"/\">\n        <Redirect to=\"/lasers-feelings\" />\n      </Route>\n      <Route path=\"/lasers-feelings\" component={LasersFeelingsSheet} />\n    </Switch>\n  </Router>\n);\n\nexport default Routes;\n","import TheHeader from \"@components/TheHeader\";\nimport TheFooter from \"@components/TheFooter\";\nimport Routes from \"./routes\";\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <>\n      <TheHeader title=\"CriaÃ§Ã£o de fichas de RPG de Lasers &amp; Sentimentos\"/>\n      <Routes />\n      <TheFooter />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}