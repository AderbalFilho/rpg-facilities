{"version":3,"sources":["constants/index.js","constants/defaultSheet.js","components/LasersFeelingsCard/styles.js","components/LasersFeelingsCard/LasersFeelingsCard.js","components/LasersFeelingsCard/index.js","components/AddCard/styles.js","components/AddCard/AddCard.js","components/AddCard/index.js","pages/LasersFeelingsSheet/styles.js","pages/LasersFeelingsSheet/LasersFeelingsSheet.js","pages/LasersFeelingsSheet/index.js","components/TheHeader/styles.js","components/TheHeader/TheHeader.js","components/TheHeader/index.js","components/TheFooter/styles.js","components/TheFooter/TheFooter.js","components/TheFooter/index.js","App.js","reportWebVitals.js","index.js"],"names":["defaultSheet","characterName","playerName","style","concept","number","objective","TheDivider","styled","Divider","CharacterName","H5","LasersFeelingsCard","sheet","interactive","elevation","Elevation","TWO","defaultProps","defaultLasersFeelingsSheet","AddCharacterCard","Card","AddCharacterLabel","label","AddCard","icon","iconSize","ContainerBody","div","LasersFeelingsSheet","sheets","map","NavContainer","TheHeader","navLinks","title","className","navLink","name","link","Footer","footer","TheFooter","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gPAEeA,ECFoB,CACjCC,cAAe,qBACfC,WAAY,GACZC,MAAO,GACPC,QAAS,GACTC,OAAQ,GACRC,UAAW,I,sMCHN,IAAMC,EAAaC,YAAOC,IAAPD,CAAH,KAIVE,EAAgBF,YAAOG,IAAPH,CAAH,KCC1B,SAASI,EAAT,GAAwC,IAAVC,EAAS,EAATA,MAE1BZ,EAMEY,EANFZ,cACAC,EAKEW,EALFX,WACAC,EAIEU,EAJFV,MACAC,EAGES,EAHFT,QACAC,EAEEQ,EAFFR,OACAC,EACEO,EADFP,UAGF,OACE,eAAC,IAAD,CAAMQ,aAAa,EAAMC,UAAWC,IAAUC,IAA9C,UACE,cAAC,EAAD,UAAkBhB,GAAiB,uBACnC,cAAC,EAAD,IACA,+CAAgBC,KAChB,8CAAeC,KACf,6CAAcC,KACd,iDAAeC,KACf,wDACA,4BAAIC,OAKVM,EAAmBM,aAAe,CAChCL,MAAOM,GAOMP,ICtCAA,EDsCAA,E,+SErCR,IAAMQ,EAAmBZ,YAAOa,IAAPb,CAAH,KAOhBc,EAAoBd,IAAOe,MAAV,KCIfC,ICZAA,EDGf,WACE,OACE,eAAC,EAAD,CAAoBV,aAAa,EAAMC,UAAWC,IAAUC,IAA5D,UACE,cAAC,IAAD,CAAMQ,KAAK,MAAMC,SAAU,KAC3B,cAAC,EAAD,uC,sMEPC,IAAMC,EAAgBnB,IAAOoB,IAAV,KCsBXC,ICtBAA,EDMf,WAEE,IAAMC,EAAS,CAACX,GAEhB,OACE,eAAC,EAAD,WAEIW,EAAOC,KAAI,SAAAlB,GACT,OAAO,cAAC,EAAD,CAA8CA,MAAOA,GAA5BA,EAAMZ,kBAG1C,cAAC,EAAD,Q,gHEjBC,IAAM+B,EAAexB,IAAOoB,IAAV,KCGzB,SAASK,EAAT,GAAyC,IAApBC,EAAmB,EAAnBA,SAAUC,EAAS,EAATA,MAC7B,OACE,qBAAKC,UAAU,sBAAf,SACE,eAAC,EAAD,WACE,qBAAKA,UAAU,kCAAf,SACE,qBAAKA,UAAU,qBAAf,SAAqCD,MAEvC,qBAAKC,UAAU,mCAAf,SAEIF,EAASH,KAAI,SAAAM,GACX,OACE,wBAEED,UACEC,EAAQZ,KAAR,0CAAkDY,EAAQZ,MAAS,yBAHvE,SAMGY,EAAQC,MALJD,EAAQC,gBAgB/BL,EAAUf,aAAe,CACvBgB,SAAU,CAAC,CAAEI,KAAM,OAAQb,KAAM,OAAQc,KAAM,MAC/CJ,MAAO,IAQMF,ICzCAA,EDyCAA,E,4NEzCR,IAAMO,EAAShC,IAAOiC,OAAV,KCUJC,ICVAA,EDEf,WACE,OACE,cAAC,EAAD,UACE,yF,OESSC,MAVf,WACE,OACE,qCACE,cAAC,EAAD,CAAWR,MAAM,2DACjB,cAAC,EAAD,IACA,cAAC,EAAD,QCCSS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c74d5f74.chunk.js","sourcesContent":["import defaultSheet from './defaultSheet';\n\nexport default defaultSheet;\n","const defaultLasersFeelingsSheet = {\n  characterName: 'Nome do personagem',\n  playerName: '',\n  style: '',\n  concept: '',\n  number: '',\n  objective: ''\n};\n\nexport default defaultLasersFeelingsSheet;\n","import styled from 'styled-components';\nimport { Divider, H5 } from \"@blueprintjs/core\";\n\nexport const TheDivider = styled(Divider)`\n  margin: 10px 0;\n`;\n\nexport const CharacterName = styled(H5)`\n  text-align: center;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, Elevation } from \"@blueprintjs/core\";\n\nimport defaultLasersFeelingsSheet from '@constants';\n\nimport * as S from './styles.js';\n\nfunction LasersFeelingsCard({ sheet }) {\n  const {\n    characterName,\n    playerName,\n    style,\n    concept,\n    number,\n    objective,\n  } = sheet;\n\n  return (\n    <Card interactive={true} elevation={Elevation.TWO}>\n      <S.CharacterName>{characterName || 'Nome do personagem'}</S.CharacterName>\n      <S.TheDivider />\n      <p>{`Jogador: ${playerName}`}</p>\n      <p>{`Estilo: ${style}`}</p>\n      <p>{`Papel: ${concept}`}</p>\n      <p>{`Número: ${number}`}</p>\n      <p>Objetivo do personagem:</p>\n      <p>{objective}</p>\n    </Card>\n  );\n}\n\nLasersFeelingsCard.defaultProps = {\n  sheet: defaultLasersFeelingsSheet\n};\n\nLasersFeelingsCard.propTypes = {\n  sheet: PropTypes.object,\n};\n\nexport default LasersFeelingsCard;\n","import LasersFeelingsCard from './LasersFeelingsCard';\n\nexport default LasersFeelingsCard;\n","import styled from 'styled-components';\nimport { Card } from \"@blueprintjs/core\";\n\nexport const AddCharacterCard = styled(Card)`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nexport const AddCharacterLabel = styled.label`\n  font-size: 1.5em;\n  font-weight: bold;\n  margin-top: 24px;\n`;\n","import React from 'react';\nimport { Elevation, Icon } from \"@blueprintjs/core\";\n\nimport * as S from './styles.js';\n\nfunction AddCard() {\n  return (\n    <S.AddCharacterCard interactive={true} elevation={Elevation.TWO}>\n      <Icon icon=\"add\" iconSize={48} />\n      <S.AddCharacterLabel>Adicionar Personagem</S.AddCharacterLabel>\n    </S.AddCharacterCard>\n  );\n}\n\nexport default AddCard;\n","import AddCard from './AddCard';\n\nexport default AddCard;\n","import styled from 'styled-components';\n\nexport const ContainerBody = styled.div`\n  display: grid;\n  gap: 24px;\n  grid-template-columns: repeat(auto-fit, 350px);\n  margin: 24px auto;\n  max-width: 1200px;\n`;\n","import React from 'react'; // , { useState }\n\nimport LasersFeelingsCard from '@components/LasersFeelingsCard';\nimport AddCard from '@components/AddCard';\nimport defaultLasersFeelingsSheet from '@constants';\n\nimport * as S from './styles.js';\n\nfunction LasersFeelingsSheet() {\n  // const [sheets, setSheets] = useState([defaultLasersFeelingsSheet]);\n  const sheets = [defaultLasersFeelingsSheet];\n\n  return (\n    <S.ContainerBody>\n      {\n        sheets.map(sheet => {\n          return <LasersFeelingsCard key={sheet.characterName} sheet={sheet} />\n        })\n      }\n      <AddCard />\n    </S.ContainerBody>\n  );\n}\n\nexport default LasersFeelingsSheet;\n","import LasersFeelingsSheet from './LasersFeelingsSheet';\n\nexport default LasersFeelingsSheet;\n","import styled from 'styled-components';\n\nexport const NavContainer = styled.div`\n  margin: 0 auto;\n  max-width: 1200px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport * as S from './styles.js';\n\nfunction TheHeader({ navLinks, title }) {\n  return (\n    <nav className=\"bp3-navbar bp3-dark\">\n      <S.NavContainer>\n        <div className=\"bp3-navbar-group bp3-align-left\">\n          <div className=\"bp3-navbar-heading\">{title}</div>\n        </div>\n        <div className=\"bp3-navbar-group bp3-align-right\">\n          {\n            navLinks.map(navLink => {\n              return (\n                <button\n                  key={navLink.name}\n                  className={\n                    navLink.icon ? `bp3-button bp3-minimal bp3-icon-${navLink.icon}` : 'bp3-button bp3-minimal'\n                  }\n                >\n                  {navLink.name}\n                </button>\n              )\n            })\n          }\n        </div>\n      </S.NavContainer>\n    </nav>\n  );\n}\n\nTheHeader.defaultProps = {\n  navLinks: [{ name: 'Home', icon: 'home', link: '/' }],\n  title: ''\n};\n\nTheHeader.propTypes = {\n  navLinks: PropTypes.array,\n  title: PropTypes.string,\n};\n\nexport default TheHeader;\n","import TheHeader from './TheHeader';\n\nexport default TheHeader;\n","import styled from 'styled-components';\n\nexport const Footer = styled.footer`\n  background-color: #394b59;\n  bottom: 0;\n  color: #fff;\n  left: 0;\n  padding: 12px;\n  position: fixed;\n  text-align: center;\n  width: 100%;\n`;\n","import React from 'react';\n\nimport * as S from './styles.js';\n\nfunction TheFooter() {\n  return (\n    <S.Footer>\n      <p>Todos os direitos reservados a seus respectivos donos</p>\n    </S.Footer>\n  );\n}\n\nexport default TheFooter;\n","import TheFooter from './TheFooter';\n\nexport default TheFooter;\n","import LasersFeelingsSheet from \"@pages/LasersFeelingsSheet\";\nimport TheHeader from \"@components/TheHeader\";\nimport TheFooter from \"@components/TheFooter\";\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <>\n      <TheHeader title=\"Criação de fichas de RPG de Lasers &amp; Sentimentos\"/>\n      <LasersFeelingsSheet />\n      <TheFooter />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}